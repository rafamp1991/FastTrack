{
    "swagger": "2.0",
    "tags": [
      {
        "name": "Line",
        "description": "Operations to return customer lines."
      }
    ],
    "host": "localhost:8081",
    "paths": {
      "/users/{numeroCPFCNPJ}/get-lines": {
        "parameters": [
          {
            "name": "numeroCPFCNPJ",
            "in": "path",
            "required": true,
            "description": "cpf do cliente",
            "type": "string"
          }
        ],
        "get": {
          "summary": "Retrieve client line",
          "tags": [
            "Line"
          ],
          "operationId": "Line",
          "parameters": [
            {
              "in": "path",
              "name": "numeroCPFCNPJ",
              "required": true,
              "type": "string",
              "description": "cpf do cliente"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Line"
              }
            },
            "400": {
              "schema": {
                "$ref": "#/definitions/InvalidArgument"
              },
              "examples": {
                "application/json": {
                  "code": "INVALID_ARGUMENT",
                  "message": "Client specified an invalid argument, request body or query param"
                }
              },
              "description": "Problem with the client request"
            },
            "403": {
              "schema": {
                "$ref": "#/definitions/PermissionDenied"
              },
              "examples": {
                "application/json": {
                  "code": "PERMISSION_DENIED",
                  "message": "Authenticated user has no permission to access the requested resource"
                }
              },
              "description": "Client does not have sufficient permission"
            },
            "404": {
              "schema": {
                "$ref": "#/definitions/NotFound"
              },
              "examples": {
                "application/json": {
                  "code": "NOT_FOUND",
                  "message": "A specified resource is not found"
                }
              },
              "description": "Resource not found"
            },
            "500": {
              "schema": {
                "$ref": "#/definitions/Internal"
              },
              "examples": {
                "application/json": {
                  "code": "INTERNAL",
                  "message": "Server error"
                }
              },
              "description": "Server error"
            },
            "504": {
              "schema": {
                "$ref": "#/definitions/Timeout"
              },
              "examples": {
                "application/json": {
                  "code": "TIMEOUT",
                  "message": "Request timeout exceeded. Try it later"
                }
              },
              "description": "Request timeout exceeded. If it happens repeatedly, consider reducing the request complexity"
            }
          }
        }
      }
    },
    "basePath": "/fetch-client-line",
    "info": {
      "description": "This API allows to return customer lines.",
      "version": "1.0.0",
      "title": "Fetch Client Line",
      "termsOfService": "",
      "contact": {
        "name": "Rafael",
        "email": "rafael.padua@compasso.com.br"
      }
    },
    "schemes": [
      "http"
    ],
    "consumes": [
      "application/xml"
    ],
    "produces": [
      "application/json"
    ],
    "definitions": {
      "Line": {
        "type": "object",
        "description": "Object to report each API endpoint and method status.",
        "required": [
          "numeroLinha",
          "status",
          "tipoLinha",
          "origemLinha"
        ],
        "properties": {
          "numeroLinha": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "tipoLinha": {
            "type": "string"
          },
          "origemLinha": {
            "type": "string"
          }
        }
      },
      "ModelError": {
        "type": "object",
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "type": "string",
            "description": "A human readable description of what the event represent"
          }
        }
      },
      "InvalidArgument": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "code"
            ],
            "properties": {
              "code": {
                "type": "string",
                "enum": [
                  "INVALID_ARGUMENT"
                ],
                "default": "INVALID_ARGUMENT",
                "description": "Client specified an invalid argument, request body or query param."
              }
            }
          },
          {
            "$ref": "#/definitions/ModelError"
          }
        ]
      },
      "PermissionDenied": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "code"
            ],
            "properties": {
              "code": {
                "type": "string",
                "enum": [
                  "PERMISSION_DENIED"
                ],
                "default": "PERMISSION_DENIED",
                "description": "Client does not have sufficient permissions to perform this action."
              }
            }
          },
          {
            "$ref": "#/definitions/ModelError"
          }
        ]
      },
      "NotFound": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "code"
            ],
            "properties": {
              "code": {
                "type": "string",
                "enum": [
                  "NOT_FOUND"
                ],
                "default": "NOT_FOUND",
                "description": "The specified resource is not found"
              }
            }
          },
          {
            "$ref": "#/definitions/ModelError"
          }
        ]
      },
      "Internal": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "code"
            ],
            "properties": {
              "code": {
                "type": "string",
                "enum": [
                  "INTERNAL"
                ],
                "default": "INTERNAL",
                "description": "Unknown server error.Typically a server bug."
              }
            }
          },
          {
            "$ref": "#/definitions/ModelError"
          }
        ]
      },
      "Unavailable": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "code"
            ],
            "properties": {
              "code": {
                "type": "string",
                "enum": [
                  "UNAVAILABLE"
                ],
                "default": "UNAVAILABLE",
                "description": "Request timeout exceeded"
              }
            }
          },
          {
            "$ref": "#/definitions/ModelError"
          }
        ]
      },
      "Timeout": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "code"
            ],
            "properties": {
              "code": {
                "type": "string",
                "enum": [
                  "TIMEOUT"
                ],
                "default": "TIMEOUT",
                "description": "Request timeout exceeded"
              }
            }
          },
          {
            "$ref": "#/definitions/ModelError"
          }
        ]
      }
    }
  }